apply plugin: 'com.android.application'

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.2"

    defaultConfig {
        applicationId "com.firstbuild.androidapp"
        minSdkVersion 18
        targetSdkVersion 21
        versionCode 1
        versionName "0.1.12"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def apk = output.outputFile;
            def jenkinsUser = System.getProperty("user.name");
            def newName;
            if(jenkinsUser == "jenkins") {
                newName = "Paragon_${variant.versionName}_${new Date().format("MM-dd-yyyy")}.apk"
            }
            else {
                newName = "Paragon_${variant.versionName}.apk"
            }
            output.outputFile = new File(apk.parentFile, newName)
        }
    }

    gradle.buildFinished {
        moveApkToDeploy(this);
    }

}


def moveApkToDeploy(project) {
    def srcApkFolder = project.file("build/outputs/apk");
    def jenkinsUser = System.getProperty("user.name");
    def destPath;
    if(jenkinsUser == "jenkins") {
        destPath = "/Users/Shared/${System.getProperty("user.name")}/AutoGeneratedFile/Android/${project.parent.name}";
    }
    else {
        destPath = "/Users/${System.getProperty("user.name")}/Desktop/${project.parent.name}";
    }

    new File(destPath).mkdirs();

    File[] listOfFiles = srcApkFolder.listFiles();
    if (listOfFiles == null || listOfFiles.size() == 0)
        return;

    // move
    for (File f : listOfFiles) {
        if (f.isFile()) {
            println "target: ${f.getName()}"

            InputStream input = new FileInputStream(f);
            OutputStream output = new FileOutputStream(destPath + "/" + f.getName());

            byte[] buffer = new byte[1024];
            int length;

            while ((length = input.read(buffer)) > 0)
                output.write(buffer, 0, length);

            input.close();
            output.close();
        }
    }
}

repositories {
    maven { url "https://jitpack.io" }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:22.2.1'
    compile 'com.android.support:recyclerview-v7:22.2.0'
    compile 'com.getbase:floatingactionbutton:1.9.0'
    compile 'jp.wasabeef:recyclerview-animators:1.2.1'
    compile 'com.android.support:design:22.2.1'
    compile 'com.afollestad:material-dialogs:0.7.3.1'
}
